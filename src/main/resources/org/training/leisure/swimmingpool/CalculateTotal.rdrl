package org.training.leisure.swimmingpool;

import java.lang.Number;
import java.math.BigDecimal;
import org.training.leisure.swimmingpool.Price;
import org.training.leisure.swimmingpool.Person;

rule "CalculateTotal"
	dialect "mvel"
	ruleflow-group "subscription"
	when
		not (Price( priceType ==  PriceType.definitive.name()  )) 
		stdtPrice : BigDecimal( ) from accumulate ( Person( sp : standardPrice != null ),
			init( BigDecimal res = new BigDecimal("0.0") ),
			action( res = res.add(sp) ),
			reverse( res = res.subtract(sp) ),
			result( res )
) 
		reductValue : BigDecimal( ) from accumulate ( Price( aa : amount != null ),
			init( BigDecimal res = new BigDecimal("0.0") ),
			action( res = res.add(aa) ),
			reverse( res = res.subtract(aa) ),
			result( res )
) 
	then
		Price definitivePrice = new Price();
		definitivePrice.setPriceType( PriceType.definitive.name() );
		definitivePrice.setAmount( stdtPrice.subtract(reductValue) );
		definitivePrice.setDescription( "Final" );
		insert( definitivePrice );
end
